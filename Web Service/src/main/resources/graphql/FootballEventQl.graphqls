type FootballEvent {
    id: ID!,
    date: String!,
    time: String!,
    latitude: Float!,
    longitude: Float!,
    note: String,
    author: AppUser!,
    participants: [AppUser],
    comments: [Comment]
}

type Comment {
    id: ID!,
    text: String!,
    footballEvent: FootballEvent!
}

type AppUser {
    id: ID!,
    username: String!,
    password: String,
    email: String!,
    footballEventsAuthor: [FootballEvent],
    footballEventsParticipants: [FootballEvent]
}

input AppUserInput {
    username: String!,
    password: String,
    email: String!
}

type Queries{
    getAllFootballEvent: [FootballEvent],
    getAllAppUser: [AppUser],
    findByIdAppUser(id: ID): AppUser
}

type Mutations{
    createAppUser(input: AppUserInput): AppUser,
    deleteAppUser(id: ID): AppUser
}

schema {
    query: Queries
    mutation: Mutations
}